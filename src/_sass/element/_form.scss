fieldset {
  border: 0;
  width: 100%;
}

legend {
  line-height: var(--leading-small);
  margin-bottom: var(--spacing-tiny);
}

label {
  cursor: pointer;
  line-height: var(--leading-small);
  margin-bottom: var(--spacing-nano);
}

input,
select,
textarea {
  color: inherit;
  transition-duration: 150ms;
  transition-property: border-color;
  width: 100%;
  border: 2px solid var(--border);
  border-radius: var(--bd-radius-tiny);
  font-weight: bold;
  padding: var(--spacing-tiny);

  &:hover {
    border-color: var(--interactive-hovered);
  }

  &:focus {
    outline: none;
    border-color: var(--interactive-focused);
    box-shadow: 0 0 0 2px var(--interactive-focused);
  }

  &:disabled {
    background-color: var(--interactive-disabled);
    color: var(--text-disabled);
    cursor: not-allowed;
  }
}


select {
  background-color: inherit;
  cursor: pointer;
  touch-action: manipulation;
}


textarea {

}


// Radio and Checkbox
[type='reset'],
[type='checkbox'],
[type='radio'],
[type='submit'] {
  height: auto;
  width: auto;
}

[type='file'],
[type='range'] {  
  cursor: pointer;
  touch-action: manipulation;
  border-style: dashed;
  border-width: 3px;
}


// custom checkbox and radio input
[type='checkbox'],
[type='radio'] {
  opacity: 0;
  + label {
    position: relative;
    padding-left: var(--spacing-medium); 

    &::before,
    &::after {
      content: "";
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
      left: calc(var(--spacing-small) * -1);
    }

    &::before {
      width: 32px;
      height: 32px;
      border: 2px solid var(--border);
      background-color: transparent;
    }

    &::after {
      margin-left: 4px;
      width: 24px;
      height: 24px;
    }
  }

  &:hover {
    + label::before {
      border-color: var(--interactive-hovered);
    }
  }

  &:focus {
    + label::before {
      box-shadow: 0 0 0 2px var(--interactive-focused);
      border-color: var(--interactive-focused);
      outline: 3px solid transparent; /* For Windows high contrast mode. */
    }
  }

  &:checked {
    + label::before {
        border-color: var(--interactive-focused);
    }
    + label::after {
        background-color: var(--interactive-focused);
    }
  }

  &:disabled {
    + label {
      cursor: not-allowed;
    }
    + label::before {
      border-color: var(--interactive-disabled);
    }
  }
}

input[type="radio"] {
  + label::before,
  + label::after {
    border-radius: 100%;
  }
}

[type='checkbox'] {
  + label::before {
    border-radius: var(--bd-radius-nano);
  }
}